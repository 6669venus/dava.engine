# Copyright (c) 2013 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# GNU Makefile based on shared rules provided by the Native Client SDK.
# See README.Makefiles for more details.
VALID_TOOLCHAINS := glibc
##NACL_ARCH?=x86_64
NACL_ARCH?=x86_32
NACL_SDK_ROOT ?= $(abspath $(CURDIR)../../../../pepper_31/)
include $(NACL_SDK_ROOT)/tools/common.mk
DIR_SOURCES_MAIN := ../../Sources/Internal

BASE_CFLAGS:=-Werror -Wno-write-strings -Wno-trigraphs


SOURCE_DIRS := $(DIR_SOURCES_MAIN) \
 				$(DIR_SOURCES_MAIN)/Animation \
 				$(DIR_SOURCES_MAIN)/Autotesting \
                $(DIR_SOURCES_MAIN)/Base \
                $(DIR_SOURCES_MAIN)/Base/Radix \
                $(DIR_SOURCES_MAIN)/Collision \
                $(DIR_SOURCES_MAIN)/Core \
                $(DIR_SOURCES_MAIN)/Database \
                $(DIR_SOURCES_MAIN)/Debug \
                $(DIR_SOURCES_MAIN)/DLC \
                $(DIR_SOURCES_MAIN)/DLC/Downloader \
                $(DIR_SOURCES_MAIN)/DLC/Patcher \
                $(DIR_SOURCES_MAIN)/DLC/Patcher/bsdiff \
                $(DIR_SOURCES_MAIN)/Entity \
                $(DIR_SOURCES_MAIN)/FileSystem \
                $(DIR_SOURCES_MAIN)/Input \
                $(DIR_SOURCES_MAIN)/Math \
                $(DIR_SOURCES_MAIN)/Math/Neon \
                $(DIR_SOURCES_MAIN)/Network \
                $(DIR_SOURCES_MAIN)/Notification \
                $(DIR_SOURCES_MAIN)/Particles \
                $(DIR_SOURCES_MAIN)/Platform \
                $(DIR_SOURCES_MAIN)/Platform/TemplateNacl \
                $(DIR_SOURCES_MAIN)/Render \
                $(DIR_SOURCES_MAIN)/Render/Image \
                $(DIR_SOURCES_MAIN)/Render/2D \
                $(DIR_SOURCES_MAIN)/Render/3D \
                $(DIR_SOURCES_MAIN)/Render/Effects \
                $(DIR_SOURCES_MAIN)/Render/Highlevel \
                $(DIR_SOURCES_MAIN)/Render/Highlevel/Vegetation \
                $(DIR_SOURCES_MAIN)/Render/Material \
                $(DIR_SOURCES_MAIN)/Scene2D \
                $(DIR_SOURCES_MAIN)/Scene3D \
                $(DIR_SOURCES_MAIN)/Scene3D/Components \
                $(DIR_SOURCES_MAIN)/Scene3D/Converters \
                $(DIR_SOURCES_MAIN)/Scene3D/Systems \
                $(DIR_SOURCES_MAIN)/Scene3D/SceneFile \
                $(DIR_SOURCES_MAIN)/Sound \
                $(DIR_SOURCES_MAIN)/UI \
                $(DIR_SOURCES_MAIN)/Utils \
                $(DIR_SOURCES_MAIN)/Job
				
INCLUDE_DIRS = ../../Sources/External \
				../../Sources/Internal \
				../../Sources/External/Box2D \
				../../Libs/fmod/nacl/inc \
				../../Libs/ \
				$(NACL_SDK_ROOT)/include/ \
				$(NACL_SDK_ROOT)/ports/include/ \
				../../Libs/include \
###				../../Libs/fmod/include \				

##SOURCE_DIRS:= $(addprefix ../,$(SOURCE_DIRS))
SEARCH_WILDCARDS := $(addsuffix /*.cpp,$(SOURCE_DIRS)) 
##override COMPILE_FLAGS += -g -O0 -pipe -w -Werror -Wno-write-strings -Wno-trigraphs
override COMPILE_FLAGS += -pipe -w -Werror -Wno-write-strings -Wno-trigraphs
override BUILD_FLAGS += -D__DAVAENGINE_NACL__ -DDAVA_FMOD -Wno-deprecated 

##ifeq ($(NACL_ARCH),x86_64)
##override BUILD_FLAGS+= -DNACL_ARCH64
##endif

TARGET = davaframework
CFLAGS = $(BUILD_FLAGS) $(COMPILE_FLAGS) $(addprefix -I, $(INCLUDE_DIRS))
SOURCES = $(wildcard $(SEARCH_WILDCARDS))
SOURCES += $(wildcard $(addsuffix /*.c,$(DIR_SOURCES_MAIN)/DLC/Patcher/bsdiff))

# Build rules generated by macros from common.mk:

$(foreach src,$(SOURCES),$(eval $(call COMPILE_RULE,$(src),$(CFLAGS))))

ifeq ($(CONFIG),Release)
$(eval $(call LIB_RULE,$(TARGET),$(SOURCES),$(LIBS),$(DEPS)))
##$(eval $(call STRIP_RULE,$(TARGET),$(TARGET)_unstripped))
else
$(eval $(call LIB_RULE,$(TARGET),$(SOURCES),$(LIBS),$(DEPS)))
endif

##$(eval $(call NMF_RULE,$(TARGET),))

test:
	@echo $(BUILD_FLAGS)
