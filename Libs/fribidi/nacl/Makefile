# Copyright (c) 2013 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# GNU Makefile based on shared rules provided by the Native Client SDK.
# See README.Makefiles for more details.
VALID_TOOLCHAINS := $(TOOLCHAIN)
NACL_ARCH?=x86_64
##NACL_ARCH?=x86_32
NACL_SDK_ROOT ?= $(abspath $(CURDIR)../../../../../pepper_31/)
include $(NACL_SDK_ROOT)/tools/common.mk

BASE_CFLAGS:=-Werror -Wno-write-strings -Wno-trigraphs


##SOURCE_DIRS := .\
##				../
				
INCLUDE_DIRS = . \
				../ \
				../lib \
				../charset
##				$(NACL_SDK_ROOT)/toolchain/mac_x86_newlib/x86_64-nacl/usr/include/glibc-compat \
##				$(NACL_SDK_ROOT)/toolchain/mac_x86_newlib/x86_64-nacl/usr/include/ \
###				$(NACL_SDK_ROOT)/../dava.framework/Libs/NaClSocket/src \

SOURCE_FILES:=    ../lib/fribidi.c \
                  ../lib/fribidi-arabic.c \
                  ../lib/fribidi-bidi.c \
                  ../lib/fribidi-bidi-types.c \
                  ../lib/fribidi-deprecated.c \
                  ../lib/fribidi-joining.c \
                  ../lib/fribidi-joining-types.c \
                  ../lib/fribidi-mem.c \
                  ../lib/fribidi-mirroring.c \
                  ../lib/fribidi-run.c \
                  ../lib/fribidi-shape.c \
                  ../charset/fribidi-char-sets.c \
                  ../charset/fribidi-char-sets-cap-rtl.c \
                  ../charset/fribidi-char-sets-cp1255.c \
                  ../charset/fribidi-char-sets-cp1256.c \
                  ../charset/fribidi-char-sets-iso8859-6.c \
                  ../charset/fribidi-char-sets-iso8859-8.c \
                  ../charset/fribidi-char-sets-utf8.c \
				
##SEARCH_WILDCARDS := $(addsuffix /*.cpp,$(SOURCE_DIRS)) 
##override COMPILE_FLAGS += -g -O0 -pipe -w -Werror -Wno-write-strings -Wno-trigraphs
override COMPILE_FLAGS += -pipe -w -Werror -Wno-write-strings -Wno-trigraphs
override BUILD_FLAGS += -D__DAVAENGINE_NACL__ -DHAVE_CONFIG_H=1 -Wno-deprecated -w

NACL_LDFLAGS=$(LIB_PATH)
TARGET = fribidi

CFLAGS = $(BUILD_FLAGS) $(COMPILE_FLAGS) $(addprefix -I, $(INCLUDE_DIRS)) $(LIB_PATH) 
##SOURCES = $(wildcard $(SEARCH_WILDCARDS))
##SOURCES = $(addprefix ../,$(SOURCE_FILES))
SOURCES = $(SOURCE_FILES)
# Build rules generated by macros from common.mk:

$(foreach src,$(SOURCES),$(eval $(call COMPILE_RULE,$(src),$(CFLAGS))))

ifeq ($(CONFIG),Release)
$(eval $(call LIB_RULE,$(TARGET),$(SOURCES),$(LIBS),$(DEPS)))
##$(eval $(call STRIP_RULE,$(TARGET),$(TARGET)_unstripped))
else
$(eval $(call LIB_RULE,$(TARGET),$(SOURCES),$(LIBS),$(DEPS)))
endif

##copy:
##	cp ./$(TOOLCHAIN)/$(CONFIG)/lib$(TARGET)_$(NACL_ARCH).a ../../../LibsNaCl/$(CONFIG)/$(TOOLCHAIN)_$(NACL_ARCH)/
##$(eval $(call NMF_RULE,$(TARGET),))

test:
	@echo $(SOURCES)